* class/struct which takes a function pointer as a parameter and calls that function in its destructor.  This would allow delayed function calls (like after a return statement).
* generic T class which stores 2 instances of T.  can act on the class as if it was actually T.  saves the last synced value (or just if the current value has changed), can check if the current value has been changed, sync the values, and get the previous value.
	- should be implicitly castable as T
* Research: can you store a function pointer in a variable of the functions return type? (probably not)
* OpenGL/Glut InputSystem (http://stackoverflow.com/a/866716)(http://www.swiftless.com/tutorials/opengl/keyboard.html)
* Grid structure is a map with GridCoords as the key
* #redefine macro, which does #undef then #define for the given macro
* auto-inline: figure out a regular expression which finds all functions in headers which have an implementation and are 1-2 lines, add "inline" above/in front of the function
